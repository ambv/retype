[tox]
minversion = 3.7.0
envlist = py36,
          py37,
          coverage,
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run tests with {basepython}
deps = pip >= 19.1.1
       pytest
       coverage
setenv = COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
passenv = https_proxy http_proxy no_proxy HOME PYTEST_* PIP_* CI_RUN TERM
commands = coverage run --source=retype -m pytest --junitxml={toxworkdir}/.test.{envname}.xml tests {posargs}
           coverage combine
           coverage report --show-missing

[testenv:lint]
description = run the flake8 checker
deps = pip >= 19.1.1
       flake8
commands = flake8 --config setup.cfg

[testenv:type]
description = run the type checker
deps = pip >= 19.1.1
       mypy == 0.701
skip_install = true
commands = mypy retype.py --strict

[testenv:package_readme]
description = check that the long description is valid (need for PyPi)
deps = pip >= 19.1.1
       twine >= 1.12.1
skip_install = true
extras =
commands = pip wheel -w {envtmpdir}/build --no-deps .
           twine check {envtmpdir}/build/*

[testenv:dev]
description = generate a DEV environment
usedevelop = True
commands = python -m pip list --format=columns
           python -c 'import sys; print(sys.executable)'

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = pip >= 19.1.1
       coverage >= 4.4.1, < 5
       diff_cover
extras =
skip_install = True
passenv = DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report --show-missing
           coverage xml -o {toxworkdir}/coverage.xml
           coverage html -d {toxworkdir}/htmlcov
           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends = py36, py37
parallel_show_output = True

