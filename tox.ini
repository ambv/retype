[tox]
minversion = 3.7.0
envlist = format-check,
          py37,
          py36,
          coverage,
          merge,
          type,
          lint,
          package_readme,
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run tests with {basepython}
deps = pip >= 19.1.1
       pytest
       coverage
setenv = COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
passenv = https_proxy http_proxy no_proxy HOME PYTEST_* PIP_* CI_RUN TERM
commands = coverage run --source=retype -m pytest --junitxml={toxworkdir}/.test.{envname}.xml tests {posargs}
           coverage combine
           coverage report --show-missing

[testenv:format]
description = format code base
deps = pip >= 19.1.1
       black == 19.3b0
       isort[pyproject] == 4.3.18
       seed-isort-config >= 1.8.0
extras =
skip_install = true
commands = - seed-isort-config --application-directories .,tests
           black .
           isort -rc .

[testenv:format-check]
description = check that the source code is well formatted
deps = {[testenv:format]deps}
skip_install = {[testenv:format]skip_install}
extras = {[testenv:format]extras}
commands = seed-isort-config --application-directories .,tests
           black --check --diff .
           isort -rc --check-only .

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 88
known_first_party = retype
known_third_party = click,setuptools,typed_ast

[testenv:lint]
description = run the flake8 checker
deps = pip >= 19.1.1
       flake8
       flake8-pyi
commands = flake8 --config setup.cfg tests setup.py retype.py retype_hgext.py
           flake8 --config types/.flake8 types

[testenv:type]
description = run the type checker
deps = pip >= 19.1.1
       mypy == 0.701
skip_install = true
commands = mypy types --strict

[testenv:merge]
description = try to merge our types against our types
deps = pip >= 19.1.1
       mypy == 0.701
changedir = {envtmpdir}
commands = python -c 'import glob; import shutil; from pathlib import Path; \
           [print(f, (Path()/"out"/shutil.copy(f, ".")).with_suffix(".py").absolute()) \
           for f in glob.glob(r"{toxinidir}/*.py")]'
           python '{envsitepackagesdir}/retype.py' -p "{toxinidir}/types" -t out .
           mypy out --strict --ignore-missing-imports

[testenv:package_readme]
description = check that the long description is valid (need for PyPi)
deps = pep517
       twine >= 1.12.1
skip_install = true
extras =
commands = python -m pep517.build --out-dir {envtmpdir}/build --binary .
           twine check {envtmpdir}/build/*

[testenv:dev]
description = generate a DEV environment
deps = pip >= 19.1.1
usedevelop = True
commands = python -m pip list --format=columns
           python -c 'import sys; print(sys.executable)'

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = pip >= 19.1.1
       coverage >= 4.4.1, < 5
       diff_cover
extras =
skip_install = True
passenv = DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report --show-missing
           coverage xml -o {toxworkdir}/coverage.xml
           coverage html -d {toxworkdir}/htmlcov
           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends = py36, py37
parallel_show_output = True

