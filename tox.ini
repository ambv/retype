[tox]
minversion = 3.7.0
envlist = fix_lint,
          py37,
          py36,
          coverage,
          merge,
          type,
          package_readme,
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run tests with {basepython}
deps = pip >= 19.1.1
extras = testing
setenv = COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
passenv = https_proxy http_proxy no_proxy HOME PYTEST_* PIP_* CI_RUN TERM
commands = pytest \
           --cov "{envsitepackagesdir}/retype" \
           --junitxml {toxworkdir}/junit.{envname}.xml \
           tests {posargs}

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.7
passenv = {[testenv]passenv}
          # without PROGRAMDATA cloning using git for Windows will fail with an
          # `error setting certificate verify locations` error
          PROGRAMDATA
extras = lint
deps = pre-commit >= 1.14.4, < 2
skip_install = True
commands = pre-commit run --all-files --show-diff-on-failure
           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 88
known_first_party = retype
known_third_party = click,pathspec,pytest,setuptools,typed_ast

[testenv:type]
description = run the type checker
deps = pip >= 19.1.1
       mypy == 0.701
skip_install = true
commands = mypy types --strict

[testenv:merge]
description = try to merge our types against our types
deps = pip >= 19.1.1
       mypy == 0.701
changedir = {envtmpdir}
commands = python -m retype -p {toxinidir}/types -t {envtmpdir} {toxinidir}
           mypy {envtmpdir} --strict --ignore-missing-imports {posargs}

[testenv:package_readme]
description = check that the long description is valid (need for PyPi)
deps = pep517
       twine >= 1.12.1
skip_install = true
extras =
commands = python -m pep517.build --out-dir {envtmpdir}/build --binary .
           twine check {envtmpdir}/build/*

[testenv:dev]
description = generate a DEV environment
usedevelop = True
commands = python -m pip list --format=columns
           python -c 'import sys; print(sys.executable)'

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = pip >= 19.1.1
       coverage >= 4.4.1, < 5
       diff_cover
extras =
skip_install = True
passenv = DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report --show-missing
           coverage xml -o {toxworkdir}/coverage.xml
           coverage html -d {toxworkdir}/htmlcov
           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends = py36, py37
parallel_show_output = True
