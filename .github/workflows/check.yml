name: check
on:
  push:
  pull_request:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - uses: pre-commit/action@v2.0.0

  test:
    name: test ${{ matrix.py }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - Windows
          - macOS
        py:
          - 3.10.0-rc.2
          - 3.9
          - 3.8
          - 3.7
          - 3.6
    steps:
      - name: Setup python for tox
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0-rc.2
      - name: Install tox
        run: python -m pip install tox
      - uses: actions/checkout@v2
      - name: Setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - name: Pick environment to run
        run: |
          import platform; import os; import sys; import codecs
          cpy = platform.python_implementation() == "CPython"
          base =("{}{}{}" if cpy else "{}{}").format("py" if cpy else "pypy", *sys.version_info[0:2])
          env = "TOXENV={}\n".format(base)
          print("Picked:\n{}for{}".format(env, sys.version))
          with codecs.open(os.environ["GITHUB_ENV"], "a", "utf-8") as file_handler:
               file_handler.write(env)
        shell: python
      - name: Setup test suite
        run: tox -vv --notest
      - name: Run test suite
        run: tox --skip-pkg-install
        env:
          PYTEST_ADDOPTS: "-vv --durations=20"
          CI_RUN: "yes"
          DIFF_AGAINST: HEAD
      - name: rename coverage report file
        run: |
          import os; os.rename('.tox/coverage.{}.xml'.format(os.environ['TOXENV']), '.tox/coverage.xml')
        shell: python
      - uses: codecov/codecov-action@v1
        with:
          file: ./.tox/coverage.xml
          flags: tests
          name: ${{ matrix.py }} - ${{ matrix.os }}

  check:
    name: check ${{ matrix.tox_env }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
        tox_env:
          - merge
          - type
          - package_readme
          - dev
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.10.0-rc.2
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0-rc.2
      - name: Install tox
        run: python -m pip install tox
      - name: Run check for ${{ matrix.tox_env }}
        run: python -m tox -e ${{ matrix.tox_env }}
        env:
          UPGRADE_ADVISORY: "yes"

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [check, test, pre-commit]
    runs-on: ubuntu-latest
    steps:
      - name: Setup python to build package
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0-rc.2
      - name: Install build
        run: python -m pip install build
      - uses: actions/checkout@v2
      - name: Build package
        run: python -m build --sdist --wheel . -o dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.pypi_password }}
